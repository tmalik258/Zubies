version: '3.9'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: >
      sh -c "python manage.py collectstatic --noinput && python manage.py migrate && gunicorn --workers 3 --bind 0.0.0.0:8002 core.wsgi:application"
    expose:
      - "8002"
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings.prod_docker
      - DEBUG=False
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DATABASE_URL=postgres://postgres:${DB_PASSWORD}@db:5432/zubies_db
      - SECRET_KEY=${SECRET_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
      - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgres:17.3
    container_name: zubies_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=zubies_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    expose:
      - "5432"

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - certbot_data:/etc/letsencrypt
      - ./nginx/webroot:/data/nginx
    depends_on:
      - backend
    restart: unless-stopped

  certbot:
    image: certbot/certbot:latest
    volumes:
      - certbot_data:/etc/letsencrypt
      - ./nginx/webroot:/data/nginx
    entrypoint: "/bin/sh -c 'certbot certonly --webroot --webroot-path=/data/nginx --email ${CERTBOT_EMAIL} --agree-tos --no-eff-email -d ${DOMAIN}'"
    depends_on:
      - nginx

  certbot-renew:
    image: certbot/certbot:latest
    volumes:
      - certbot_data:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'while true; do certbot renew; sleep 5184000; done'" # 5184000 seconds = 60 days
    depends_on:
      - nginx
    restart: unless-stopped

volumes:
  postgres_data:
  certbot_data: